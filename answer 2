def word_break(s, dictionary):
    n = len(s)
    dp = [False] * (n + 1)
    dp[0] = True  # Base case: Empty string can always be segmented

    # Convert list to set for faster lookup
    word_set = set(dictionary)

    # Dynamic Programming to check all possible breaks
    for i in range(1, n + 1):
        for j in range(i):
            if dp[j] and s[j:i] in word_set:
                dp[i] = True
                break

    # If dp[n] is True, the string can be segmented
    return 1 if dp[n] else 0

# Test example 1
n1 = 6
s1 = "ilike"
dictionary1 = ["i", "like", "sam", "sung", "samsung", "mobile"]
print("Output:", word_break(s1, dictionary1)) 

# Test example 2
n2 = 6
s2 = "ilikesamsung"
dictionary2 = ["i", "like", "sam", "sung", "samsung", "mobile"]
print("Output:", word_break(s2, dictionary2)) 
